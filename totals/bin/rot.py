# Autogenerated with SMOP 
from smop.core import *
# rot.m

    
@function
def rot(x=None,y=None,theta=None,ya=None,*args,**kwargs):
    varargin = rot.varargin
    nargin = rot.nargin

    # ROT rotates a vector counterclockwise,
    
    # [xr,yr]=ROT(x,y,theta,ya) rotates a vector counterclockwise
# theta degrees OR rotates the coordinate system clockwise
# theta degrees. Example: rot(1,0,90) returns (0,1).
    
    # If 4 arguments, then it uses xa and ya as orientation
#################################################################
# ver. 1: 11/17/96 (RG)
#################################################################
    
    if nargin == 4:
        theta=dot(- atan2(ya,theta),180) / pi
# rot.m:15
    
    costheta=cos(dot(theta / 180,pi))
# rot.m:18
    sintheta=sin(dot(theta / 180,pi))
# rot.m:19
    if length(theta) == 1:
        xr=dot(x,costheta) - dot(y,sintheta)
# rot.m:22
        yr=dot(x,sintheta) + dot(y,costheta)
# rot.m:23
    else:
        xr=multiply(x,costheta) - multiply(y,sintheta)
# rot.m:25
        yr=multiply(x,sintheta) + multiply(y,costheta)
# rot.m:26
    